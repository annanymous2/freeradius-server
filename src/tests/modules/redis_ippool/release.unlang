#
#  Run the "redis" xlat
#
$INCLUDE cluster_reset.inc

update control {
	Pool-Name := 'test_update'
}

#
#  Add IP addresses
#
update request {
	Tmp-String-0 := `./build/bin/rlm_redis_ippool_tool -a 192.168.0.1/32 $ENV{REDIS_IPPOOL_TEST_SERVER}:30001 %{control:Pool-Name} 192.168.0.0`
}

#
#  Check allocation
#
redis_ippool {
	invalid = 1
}
if (updated) {
	test_pass
} else {
	test_fail
}

if (&reply:DHCP-Your-IP-Address == 192.168.0.1) {
	test_pass
} else {
	test_fail
}

#
#  Release the IP address
#
update {
	&request:DHCP-Requested-IP-Address := &reply:DHCP-Your-IP-Address
	&control:Pool-Action := Release
}
redis_ippool {
	invalid = 1
}
if (updated) {
	test_pass
} else {
	test_fail
}

#
#  Verify the association with the device has been removed
#
if ("%{redis:EXISTS '{%{control:Pool-Name}%}:device:%{Calling-Station-ID}'}" == '0') {
	test_pass
} else {
	test_fail
}

#
#  Verify the hash information is retained
#
if ("%{redis:HGET '{%{control:Pool-Name}%}:ip:%{reply:DHCP-Your-IP-Address}' 'device'}" == '00:11:22:33:44:55') {
	test_pass
} else {
	test_fail
}

if ("%{redis:HGET {%{control:Pool-Name}%}:ip:%{reply:DHCP-Your-IP-Address} gateway}" == '127.0.0.1') {
	test_pass
} else {
	test_fail
}

if ("%{redis:HGET {%{control:Pool-Name}%}:ip:%{reply:DHCP-Your-IP-Address} range}" == '192.168.0.0') {
	test_pass
} else {
	test_fail
}

# Check the ZSCORE
if ("%{expr:%{redis:ZSCORE '{%{control:Pool-Name}%}:pool' '%{reply:DHCP-Your-IP-Address}'} - %l}" > 0) {
	test_pass
} else {
	test_fail
}

if ("%{expr:%{redis:ZSCORE '{%{control:Pool-Name}%}:pool' '%{reply:DHCP-Your-IP-Address}'} - %l}" < 10) {
	test_pass
} else {
	test_fail
}

#
#  Release the IP address again (should still be fine)
#
update {
	&request:DHCP-Requested-IP-Address := &reply:DHCP-Your-IP-Address
	&control:Pool-Action := Release
}
redis_ippool {
	invalid = 1
}
if (updated) {
	test_pass
} else {
	test_fail
}

update reply {
	reply: !* ANY
}
